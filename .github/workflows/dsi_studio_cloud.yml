name: DSI Studio Cloud
on: 
  workflow_dispatch:
    inputs:
      dataset_id:
        description: 'OpenNeuro Accession Number'
        default: ds001378
        required: true
      
jobs:    
  info:
    name: Download OpenNeuro
    runs-on: ubuntu-20.04
    steps:
      - name: OpenNeuro
        id: data
        run: |
          # Process dataset_description.json
          aws s3 sync --no-sign-request --region eu-west-1 --exclude "*" --include "dataset_description.json" s3://openneuro.org/${{ inputs.dataset_id }} .
          content=$(cat dataset_description.json)
          name=$(echo "$content" | jq -r '.Name')
          echo "dataset_name=$name" >> $GITHUB_OUTPUT
          echo "OpenNeuro ${{ inputs.dataset_id }} $name" >> $GITHUB_STEP_SUMMARY
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view ${{ inputs.dataset_id }} &> /dev/null; then
            echo "Release ${{ inputs.dataset_id }} already exists, skipping release creation."
          else
            gh release create ${{ inputs.dataset_id }} --title "${{ steps.data.outputs.dataset_name }}" --notes "Processed data for dataset ${{ inputs.dataset_id }}"
          fi
          
  nii2src:
    uses: ./.github/workflows/nii2src.yml
    needs: info
    name: Call NII to SRC
    with:
      dataset_id: ${{ inputs.dataset_id }}      
          
  src_quality_check:
    uses: ./.github/workflows/src_qc.yml
    needs: nii2src
    name: SRC Quality Check
    with:
      src_list: 'src.gz'
      dataset_id: ${{ inputs.dataset_id }} 

  reconstruction:
    uses: ./.github/workflows/recon.yml
    needs: nii2src
    name: SRC to FIB
    with:
      dataset_id: ${{ inputs.dataset_id }}
          
  database_construction:
    uses: ./.github/workflows/create_db.yml
    needs: reconstruction
    strategy:
      matrix:
          metrics: ['qa','dti_fa']
    name: Create Database
    with:
      metrics: ${{ matrix.metrics}}
      dataset_id: ${{ inputs.dataset_id }}
