name: STEP T2 TOPUP/EDDY
on:
  workflow_dispatch:
    inputs:
      dataset_id:
        description: 'OpenNeuro Accession Number'
        default: ds001378
        required: true
  workflow_call:
    inputs:
      dataset_id:
        description: 'OpenNeuro Accession Number'
        default: ds001378
        required: true
        type: string

jobs:
  info:
    runs-on: ubuntu-20.04
    outputs:
      files: ${{ steps.data.outputs.files }}
    steps:
      - name: Get Subject List
        id: data
        run: |
          # Get subjects
          FILES=$(aws s3 ls --no-sign-request --region eu-west-1 s3://openneuro.org/${{ inputs.dataset_id }} --recursive | grep '/dwi/' | grep 'nii.gz' | awk '{print $NF}' | awk -F'/dwi/' '{print $1}' | awk -F'/sub-' '/sub-/ {print "sub-" $2}' | sort -u | tr '/' '_' | jq -R -s -c 'split("\n")[:-1]')
          echo "files=$FILES" >> $GITHUB_OUTPUT
  topup_eddy:
    name: TOPUP/EDDY
    needs: info
    outputs:
      files: ${{ needs.info.outputs.files }} 
    strategy:
      matrix:
        batch: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache FSL environment
        id: cache-fsl
        uses: actions/cache@v3
        with:
          path: /opt/fsl
          key: ${{ runner.os }}-fsl
      - name: Prepare FSL environment
        if: steps.cache-fsl.outputs.cache-hit != 'true'
        run: curl -sSL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.4-centos7_64.tar.gz | tar zxv --no-same-owner -C /opt --exclude='fsl/doc' --exclude='fsl/refdoc' --exclude='fsl/python/oxford_asl' --exclude='fsl/data/possum' --exclude='fsl/data/first' --exclude='fsl/data/mist' --exclude='fsl/data/atlases' --exclude='fsl/data/xtract_data' --exclude='fsl/extras/doc' --exclude='fsl/extras/man' --exclude='fsl/extras/src' --exclude='fsl/src'
      - name: Download SRC and Run TOPUP EDDY
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export OS="Linux"
          export FSLDIR="/opt/fsl"
          export FSL_DIR="$FSLDIR"
          export FSLOUTPUTTYPE="NIFTI_GZ"
          export FSLMULTIFILEQUIT="TRUE"
          export LD_LIBRARY_PATH="$FSLDIR/lib:$LD_LIBRARY_PATH"
          export FSLTCLSH="/usr/bin/tclsh"
          export FSLWISH="/usr/bin/wish"
          export PATH="$FSLDIR/bin:$PATH"
          curl -sL "https://github.com/frankyeh/DSI-Studio/releases/download/2024.06.12/dsi_studio_ubuntu2004.zip" | jar x && chmod 777 ./dsi-studio/dsi_studio
          
          subjects=($(aws s3 ls --no-sign-request --region eu-west-1 s3://openneuro.org/${{ inputs.dataset_id }} --recursive | grep '/dwi/' | grep 'nii.gz' | awk '{print $NF}' | awk -F'/dwi/' '{print $1}' | awk -F'/sub-' '/sub-/ {print "sub-" $2}' | sort -u ))
          for (( i=${{ matrix.batch }}; i< ${#subjects[@]}; i+=16 )); do        
            subject=${subjects[i]}
            file=$(echo $subject | tr '/' '_')
            if curl --head --silent --fail https://github.com/frankyeh/DSI-Studio-Cloud/releases/download/${{ inputs.dataset_id }}/${file}_dwi.src.gz; then
              echo "${file}_dwi.src.gz exists, skip"
            else
              url="https://github.com/frankyeh/DSI-Studio-Cloud/releases/download/${{ inputs.dataset_id }}/${file}_dwi.raw.src.gz"
              echo "download ${url} for topup eddy"
              if curl --head --silent --fail $url; then
                wget -q $url
                ./dsi-studio/dsi_studio --action=rec --source=${file}_dwi.raw.src.gz --cmd="[Step T2][Corrections][EDDY]" --save_src=${file}_dwi.src.gz 
                gh release upload "${{ inputs.dataset_id }}" ${file}_dwi.src.gz 
                rm *.src.gz
              else
                echo "ERROR: cannot find SRC file $url for topup eddy " >&2
                exit 1
              fi
            fi
          done
        
